{"ast":null,"code":"import { withLogger } from \"./logger\";\nimport axios from \"axios\";\n\nclass Request {\n  constructor(token) {\n    this.requestWithToken = () => {\n      return {\n        header: {\n          \"x-token\": this.token\n        }\n      };\n    };\n\n    this.get = (url, withAuth) => {\n      let config = {};\n\n      if (withAuth) {\n        config = { ...config,\n          ...this.requestWithToken()\n        };\n      }\n\n      return this.request.get(url, config);\n    };\n\n    this.post = (url, params) => {\n      let config = {};\n\n      if (params) {\n        config = { ...config,\n          ...this.requestWithToken()\n        };\n      }\n\n      return this.request.post(url, params, config);\n    };\n\n    this.token = token;\n    this.request = withLogger(axios.create({\n      baseURL: \"http://localhost:10888/\",\n      timeout: 1000\n    }));\n  }\n\n}\n\nexport const request = new Request(\"test token\");","map":{"version":3,"sources":["/Users/mihailkulik/Documents/dev/hakaton2021_full/src/api/request.js"],"names":["withLogger","axios","Request","constructor","token","requestWithToken","header","get","url","withAuth","config","request","post","params","create","baseURL","timeout"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,CAAc;AACZC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA,SAUnBC,gBAVmB,GAUA,MAAM;AACvB,aAAO;AACLC,QAAAA,MAAM,EAAE;AACN,qBAAW,KAAKF;AADV;AADH,OAAP;AAKD,KAhBkB;;AAAA,SAkBnBG,GAlBmB,GAkBb,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACvB,UAAIC,MAAM,GAAG,EAAb;;AAEA,UAAID,QAAJ,EAAc;AACZC,QAAAA,MAAM,GAAG,EAAE,GAAGA,MAAL;AAAa,aAAG,KAAKL,gBAAL;AAAhB,SAAT;AACD;;AAED,aAAO,KAAKM,OAAL,CAAaJ,GAAb,CAAiBC,GAAjB,EAAsBE,MAAtB,CAAP;AACD,KA1BkB;;AAAA,SA4BnBE,IA5BmB,GA4BZ,CAACJ,GAAD,EAAMK,MAAN,KAAiB;AACtB,UAAIH,MAAM,GAAG,EAAb;;AAEA,UAAIG,MAAJ,EAAY;AACVH,QAAAA,MAAM,GAAG,EAAE,GAAGA,MAAL;AAAa,aAAG,KAAKL,gBAAL;AAAhB,SAAT;AACD;;AAED,aAAO,KAAKM,OAAL,CAAaC,IAAb,CAAkBJ,GAAlB,EAAuBK,MAAvB,EAA+BH,MAA/B,CAAP;AACD,KApCkB;;AACjB,SAAKN,KAAL,GAAaA,KAAb;AACA,SAAKO,OAAL,GAAeX,UAAU,CACvBC,KAAK,CAACa,MAAN,CAAa;AACXC,MAAAA,OAAO,EAAE,yBADE;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb,CADuB,CAAzB;AAMD;;AATW;;AAwCd,OAAO,MAAML,OAAO,GAAG,IAAIT,OAAJ,CAAY,YAAZ,CAAhB","sourcesContent":["import { withLogger } from \"./logger\"\nimport axios from \"axios\"\n\nclass Request {\n  constructor(token) {\n    this.token = token\n    this.request = withLogger(\n      axios.create({\n        baseURL: \"http://localhost:10888/\",\n        timeout: 1000,\n      }),\n    )\n  }\n\n  requestWithToken = () => {\n    return {\n      header: {\n        \"x-token\": this.token,\n      },\n    }\n  }\n\n  get = (url, withAuth) => {\n    let config = {}\n\n    if (withAuth) {\n      config = { ...config, ...this.requestWithToken() }\n    }\n\n    return this.request.get(url, config)\n  }\n\n  post = (url, params) => {\n    let config = {}\n\n    if (params) {\n      config = { ...config, ...this.requestWithToken() }\n    }\n\n    return this.request.post(url, params, config)\n  }\n}\n\nexport const request = new Request(\"test token\")\n"]},"metadata":{},"sourceType":"module"}