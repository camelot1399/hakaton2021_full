{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { Fragment, cloneElement, isValidElement, useState, useRef, useMemo, Children } from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport ReactDOM from 'react-dom';\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { tooltipContainerAttr } from \"./TooltipContainer\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { hasReactNode } from \"../../lib/utils\";\n\nvar isDOMTypeElement = function isDOMTypeElement(element) {\n  return /*#__PURE__*/React.isValidElement(element) && typeof element.type === 'string';\n};\n\nvar baseClassName = getClassName('Tooltip');\nvar warn = warnOnce('Tooltip');\nvar IS_DEV = process.env.NODE_ENV === 'development';\n\nvar TooltipPortal = function TooltipPortal(_ref) {\n  var header = _ref.header,\n      text = _ref.text,\n      offsetX = _ref.offsetX,\n      offsetY = _ref.offsetY,\n      alignX = _ref.alignX,\n      alignY = _ref.alignY,\n      cornerOffset = _ref.cornerOffset,\n      mode = _ref.mode,\n      target = _ref.target,\n      onClose = _ref.onClose;\n\n  var _useState = useState({\n    x: 0,\n    y: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      pos = _useState2[0],\n      setPos = _useState2[1];\n\n  var containerRef = useRef();\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n  /* eslint-disable no-restricted-properties */\n\n\n  var fixedPortal = useMemo(function () {\n    return target.closest(\"[\".concat(tooltipContainerAttr, \"=fixed]\")) != null;\n  }, [target]);\n  var portalTarget = useMemo(function () {\n    return target.closest(\"[\".concat(tooltipContainerAttr, \"]\"));\n  }, [target]);\n  /* eslint-enable no-restricted-properties */\n\n  if (IS_DEV && !portalTarget) {\n    throw new Error('Use TooltipContainer for Tooltip outside Panel (see docs)');\n  }\n\n  useGlobalEventListener(document, 'click', onClose);\n  useIsomorphicLayoutEffect(function () {\n    var container = containerRef.current;\n    var targetBounds = target.getBoundingClientRect();\n    var portalBounds = portalTarget.getBoundingClientRect();\n    var coords = {\n      width: targetBounds.width,\n      height: targetBounds.height,\n      x: targetBounds.left - portalBounds.left,\n      y: targetBounds.top - portalBounds.top\n    };\n    setPos({\n      x: coords.x + offsetX + (alignX === 'right' ? coords.width - container.offsetWidth : 0),\n      y: coords.y + (alignY === 'top' ? -container.offsetHeight - offsetY : coords.height + offsetY)\n    });\n  }, [target, portalTarget]);\n  return /*#__PURE__*/ReactDOM.createPortal(createScopedElement(\"div\", {\n    vkuiClass: classNames(baseClassName, \"Tooltip--x-\".concat(alignX), \"Tooltip--y-\".concat(alignY), \"Tooltip--\".concat(mode), {\n      'Tooltip--fixed': fixedPortal\n    })\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"Tooltip__container\",\n    style: {\n      top: pos.y,\n      left: pos.x\n    },\n    ref: containerRef\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"Tooltip__corner\",\n    style: _defineProperty({}, alignX, 20 + cornerOffset)\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"Tooltip__content\"\n  }, header && createScopedElement(Subhead, {\n    weight: \"semibold\",\n    vkuiClass: \"Tooltip__title\"\n  }, header), text && createScopedElement(Subhead, {\n    weight: \"regular\",\n    vkuiClass: \"Tooltip__text\"\n  }, text)))), portalTarget);\n};\n\nvar Tooltip = function Tooltip(_ref3) {\n  var _ref3$children = _ref3.children,\n      children = _ref3$children === void 0 ? null : _ref3$children,\n      isShown = _ref3.isShown,\n      portalProps = _objectWithoutProperties(_ref3, [\"children\", \"isShown\"]);\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      target = _useState4[0],\n      setTarget = _useState4[1];\n\n  if (IS_DEV) {\n    var multiChildren = Children.count(children) > 1; // Empty children is a noop\n\n    var primitiveChild = hasReactNode(children) && _typeof(children) !== 'object';\n    (multiChildren || primitiveChild) && warn(['children must be a single React element, got', multiChildren && 'multiple', primitiveChild && JSON.stringify(children)].filter(Boolean).join(' '));\n  }\n\n  var childRef = /*#__PURE__*/isValidElement(children) && (isDOMTypeElement(children) ? children.ref : children.props.getRootRef);\n  var patchedRef = useExternRef(setTarget, childRef);\n  var child = /*#__PURE__*/isValidElement(children) ? /*#__PURE__*/cloneElement(children, _defineProperty({}, isDOMTypeElement(children) ? 'ref' : 'getRootRef', patchedRef)) : children;\n  return createScopedElement(Fragment, null, child, isShown && target != null && createScopedElement(TooltipPortal, _extends({}, portalProps, {\n    target: target\n  })));\n};\n\nTooltip.defaultProps = {\n  offsetX: 0,\n  offsetY: 15,\n  alignX: 'left',\n  alignY: 'bottom',\n  cornerOffset: 0,\n  isShown: true,\n  mode: 'accent'\n};\nexport default Tooltip;","map":{"version":3,"sources":["../../../src/components/Tooltip/Tooltip.tsx"],"names":["isDOMTypeElement","element","baseClassName","getClassName","warn","warnOnce","IS_DEV","process","TooltipPortal","header","text","offsetX","offsetY","alignX","alignY","cornerOffset","mode","target","onClose","pos","setPos","useState","x","y","containerRef","useRef","document","useDOM","fixedPortal","useMemo","portalTarget","useGlobalEventListener","useIsomorphicLayoutEffect","container","targetBounds","portalBounds","coords","width","height","top","classNames","left","Tooltip","children","isShown","portalProps","setTarget","multiChildren","Children","primitiveChild","hasReactNode","JSON","childRef","patchedRef","useExternRef","child","cloneElement"],"mappings":"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","sourcesContent":["import React, {\n  FC, ReactElement, ReactNode,\n  Fragment, cloneElement, isValidElement,\n  useState, useRef, useMemo, Children,\n} from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport ReactDOM from 'react-dom';\nimport { useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport { tooltipContainerAttr } from './TooltipContainer';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { hasReactNode } from '../../lib/utils';\n\ninterface TooltipPortalProps extends Partial<TooltipProps> {\n  target?: HTMLElement;\n}\n\nconst isDOMTypeElement = (element: ReactElement): element is React.DOMElement<any, any> => {\n  return React.isValidElement(element) && typeof element.type === 'string';\n};\n\nconst baseClassName = getClassName('Tooltip');\nconst warn = warnOnce('Tooltip');\nconst IS_DEV = process.env.NODE_ENV === 'development';\n\nconst TooltipPortal: FC<TooltipPortalProps> = ({\n  header,\n  text,\n  offsetX,\n  offsetY,\n  alignX,\n  alignY,\n  cornerOffset,\n  mode,\n  target,\n  onClose,\n}) => {\n  const [pos, setPos] = useState({ x: 0, y: 0 });\n  const containerRef = useRef<HTMLDivElement>();\n  const { document } = useDOM();\n\n  /* eslint-disable no-restricted-properties */\n  const fixedPortal = useMemo(() => target.closest(`[${tooltipContainerAttr}=fixed]`) != null, [target]);\n  const portalTarget = useMemo(() => target.closest(`[${tooltipContainerAttr}]`), [target]);\n  /* eslint-enable no-restricted-properties */\n  if (IS_DEV && !portalTarget) {\n    throw new Error('Use TooltipContainer for Tooltip outside Panel (see docs)');\n  }\n\n  useGlobalEventListener(document, 'click', onClose);\n\n  useIsomorphicLayoutEffect(() => {\n    const container = containerRef.current;\n    const targetBounds = target.getBoundingClientRect();\n    const portalBounds = portalTarget.getBoundingClientRect();\n\n    const coords = {\n      width: targetBounds.width,\n      height: targetBounds.height,\n      x: targetBounds.left - portalBounds.left,\n      y: targetBounds.top - portalBounds.top,\n    };\n\n    setPos({\n      x: coords.x + offsetX + (alignX === 'right' ? coords.width - container.offsetWidth : 0),\n      y: coords.y + (alignY === 'top' ? -container.offsetHeight - offsetY : coords.height + offsetY),\n    });\n  }, [target, portalTarget]);\n\n  return ReactDOM.createPortal(\n    <div vkuiClass={\n      classNames(\n        baseClassName,\n        `Tooltip--x-${alignX}`,\n        `Tooltip--y-${alignY}`,\n        `Tooltip--${mode}`,\n        {\n          'Tooltip--fixed': fixedPortal,\n        },\n      )}>\n      <div vkuiClass=\"Tooltip__container\" style={{ top: pos.y, left: pos.x }} ref={containerRef}>\n        <div vkuiClass=\"Tooltip__corner\" style={{ [alignX]: 20 + cornerOffset }} />\n        <div vkuiClass=\"Tooltip__content\">\n          {header && <Subhead weight=\"semibold\" vkuiClass=\"Tooltip__title\">{header}</Subhead>}\n          {text && <Subhead weight=\"regular\" vkuiClass=\"Tooltip__text\">{text}</Subhead>}\n        </div>\n      </div>\n    </div>, portalTarget);\n};\n\nexport interface TooltipProps {\n  /**\n   * **Важно**: если в `children` передан React-компонент, то необходимо убедиться в том, что он поддерживает\n   * свойство `getRootRef`, которое должно возвращаться ссылку на корневой DOM-элемент компонента,\n   * иначе тултип показан не будет. Если передан React-element, то такой проблемы нет.\n   */\n  children: ReactElement;\n  mode?: 'accent' | 'light';\n  /**\n   * Если передан `false`, то рисуется просто `children`.\n   */\n  isShown?: boolean;\n  /**\n   * Текст тултипа.\n   */\n  text?: ReactNode;\n  /**\n   * Заголовок тултипа.\n   */\n  header?: ReactNode;\n  /**\n   * Положение по горизонтали (прижатие к левому или правому краю `children`).\n   */\n  alignX?: 'left' | 'right';\n  /**\n   * Положение по вертикали (расположение над или под `children`).\n   */\n  alignY?: 'top' | 'bottom';\n  /**\n   * Сдвиг по горизонтали (относительно портала, в котором рисуется тултип).\n   */\n  offsetX?: number;\n  /**\n   * Сдвиг по вертикали (относительно портала, в котором рисуется тултип).\n   */\n  offsetY?: number;\n  /**\n   * Сдвиг треугольника (относительно ширины тултипа).\n   */\n  cornerOffset?: number;\n  /**\n   * Callback, который вызывается при клике по любому месту в пределах экрана.\n   */\n  onClose?: () => void;\n}\n\nconst Tooltip: FC<TooltipProps> = ({ children = null, isShown, ...portalProps }) => {\n  const [target, setTarget] = useState<HTMLElement>();\n\n  if (IS_DEV) {\n    const multiChildren = Children.count(children) > 1;\n    // Empty children is a noop\n    const primitiveChild = hasReactNode(children) && typeof children !== 'object';\n    (multiChildren || primitiveChild) && warn([\n      'children must be a single React element, got',\n      multiChildren && 'multiple',\n      primitiveChild && JSON.stringify(children),\n    ].filter(Boolean).join(' '));\n  }\n\n  const childRef = isValidElement(children) &&\n    (isDOMTypeElement(children) ? children.ref : (children.props as any).getRootRef);\n  const patchedRef = useExternRef(setTarget, childRef);\n  const child = isValidElement(children) ? cloneElement(children, {\n    [isDOMTypeElement(children) ? 'ref' : 'getRootRef']: patchedRef,\n  }) : children;\n\n  return (\n    <Fragment>\n      {child}\n      {isShown && target != null && <TooltipPortal {...portalProps} target={target} />}\n    </Fragment>\n  );\n};\n\nTooltip.defaultProps = {\n  offsetX: 0,\n  offsetY: 15,\n  alignX: 'left',\n  alignY: 'bottom',\n  cornerOffset: 0,\n  isShown: true,\n  mode: 'accent',\n};\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}