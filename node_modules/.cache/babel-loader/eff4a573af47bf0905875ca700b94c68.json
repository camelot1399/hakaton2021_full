{"ast":null,"code":"export const withLogger = axios => {\n  axios.interceptors.request.use(request => {\n    console.log(`%c AXIOS [request] ${request.url}:`, \"color: #008000; font-weight: bold\", request);\n    return request;\n  }, error => {\n    console.log(`%c AXIOS [request]`, \"color: red; font-weight: bold\", error);\n    return Promise.reject(error);\n  });\n  axios.interceptors.response.use(config => {\n    console.log(`%c AXIOS [response-success] ${config.config.url}:`, \"color: #008000; font-weight: bold\", config);\n    return config;\n  }, error => {\n    console.log(`%c AXIOS [response-error]`, \"color: red; font-weight: bold\", error);\n    return Promise.reject(error.response);\n  });\n  return axios;\n};","map":{"version":3,"sources":["/Users/mihailkulik/Documents/dev/hakaton2021_full/src/api/logger.js"],"names":["withLogger","axios","interceptors","request","use","console","log","url","error","Promise","reject","response","config"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,KAAD,IAAW;AACnCA,EAAAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKD,OAAD,IAAa;AACXE,IAAAA,OAAO,CAACC,GAAR,CACK,sBAAqBH,OAAO,CAACI,GAAI,GADtC,EAEI,mCAFJ,EAGIJ,OAHJ;AAKA,WAAOA,OAAP;AACD,GARL,EASKK,KAAD,IAAW;AACTH,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAb,EAAkC,+BAAlC,EAAmEE,KAAnE;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,GAZL;AAeAP,EAAAA,KAAK,CAACC,YAAN,CAAmBS,QAAnB,CAA4BP,GAA5B,CACKQ,MAAD,IAAY;AACVP,IAAAA,OAAO,CAACC,GAAR,CACK,+BAA8BM,MAAM,CAACA,MAAP,CAAcL,GAAI,GADrD,EAEI,mCAFJ,EAGIK,MAHJ;AAKA,WAAOA,MAAP;AACD,GARL,EASKJ,KAAD,IAAW;AACTH,IAAAA,OAAO,CAACC,GAAR,CACK,2BADL,EAEI,+BAFJ,EAGIE,KAHJ;AAKA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAK,CAACG,QAArB,CAAP;AACD,GAhBL;AAkBA,SAAOV,KAAP;AACD,CAnCM","sourcesContent":["export const withLogger = (axios) => {\n  axios.interceptors.request.use(\n      (request) => {\n        console.log(\n            `%c AXIOS [request] ${request.url}:`,\n            \"color: #008000; font-weight: bold\",\n            request,\n        )\n        return request\n      },\n      (error) => {\n        console.log(`%c AXIOS [request]`, \"color: red; font-weight: bold\", error)\n        return Promise.reject(error)\n      },\n  )\n\n  axios.interceptors.response.use(\n      (config) => {\n        console.log(\n            `%c AXIOS [response-success] ${config.config.url}:`,\n            \"color: #008000; font-weight: bold\",\n            config,\n        )\n        return config\n      },\n      (error) => {\n        console.log(\n            `%c AXIOS [response-error]`,\n            \"color: red; font-weight: bold\",\n            error,\n        )\n        return Promise.reject(error.response)\n      },\n  )\n  return axios\n}\n"]},"metadata":{},"sourceType":"module"}