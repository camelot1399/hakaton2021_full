{"version":3,"sources":["../../../../src/components/Tooltip/Tooltip.tsx"],"names":["isDOMTypeElement","element","isValidElement","type","baseClassName","warn","IS_DEV","process","env","NODE_ENV","TooltipPortal","header","text","offsetX","offsetY","alignX","alignY","cornerOffset","mode","target","onClose","x","y","pos","setPos","containerRef","document","fixedPortal","closest","tooltipContainerAttr","portalTarget","Error","container","current","targetBounds","getBoundingClientRect","portalBounds","coords","width","height","left","top","offsetWidth","offsetHeight","ReactDOM","createPortal","Tooltip","children","isShown","portalProps","setTarget","multiChildren","Children","count","primitiveChild","JSON","stringify","filter","Boolean","join","childRef","ref","props","getRootRef","patchedRef","child","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  FC, ReactElement, ReactNode,\n  Fragment, cloneElement, isValidElement,\n  useState, useRef, useMemo, Children,\n} from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport ReactDOM from 'react-dom';\nimport { useDOM } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport { tooltipContainerAttr } from './TooltipContainer';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { hasReactNode } from '../../lib/utils';\n\ninterface TooltipPortalProps extends Partial<TooltipProps> {\n  target?: HTMLElement;\n}\n\nconst isDOMTypeElement = (element: ReactElement): element is React.DOMElement<any, any> => {\n  return React.isValidElement(element) && typeof element.type === 'string';\n};\n\nconst baseClassName = getClassName('Tooltip');\nconst warn = warnOnce('Tooltip');\nconst IS_DEV = process.env.NODE_ENV === 'development';\n\nconst TooltipPortal: FC<TooltipPortalProps> = ({\n  header,\n  text,\n  offsetX,\n  offsetY,\n  alignX,\n  alignY,\n  cornerOffset,\n  mode,\n  target,\n  onClose,\n}) => {\n  const [pos, setPos] = useState({ x: 0, y: 0 });\n  const containerRef = useRef<HTMLDivElement>();\n  const { document } = useDOM();\n\n  /* eslint-disable no-restricted-properties */\n  const fixedPortal = useMemo(() => target.closest(`[${tooltipContainerAttr}=fixed]`) != null, [target]);\n  const portalTarget = useMemo(() => target.closest(`[${tooltipContainerAttr}]`), [target]);\n  /* eslint-enable no-restricted-properties */\n  if (IS_DEV && !portalTarget) {\n    throw new Error('Use TooltipContainer for Tooltip outside Panel (see docs)');\n  }\n\n  useGlobalEventListener(document, 'click', onClose);\n\n  useIsomorphicLayoutEffect(() => {\n    const container = containerRef.current;\n    const targetBounds = target.getBoundingClientRect();\n    const portalBounds = portalTarget.getBoundingClientRect();\n\n    const coords = {\n      width: targetBounds.width,\n      height: targetBounds.height,\n      x: targetBounds.left - portalBounds.left,\n      y: targetBounds.top - portalBounds.top,\n    };\n\n    setPos({\n      x: coords.x + offsetX + (alignX === 'right' ? coords.width - container.offsetWidth : 0),\n      y: coords.y + (alignY === 'top' ? -container.offsetHeight - offsetY : coords.height + offsetY),\n    });\n  }, [target, portalTarget]);\n\n  return ReactDOM.createPortal(\n    <div vkuiClass={\n      classNames(\n        baseClassName,\n        `Tooltip--x-${alignX}`,\n        `Tooltip--y-${alignY}`,\n        `Tooltip--${mode}`,\n        {\n          'Tooltip--fixed': fixedPortal,\n        },\n      )}>\n      <div vkuiClass=\"Tooltip__container\" style={{ top: pos.y, left: pos.x }} ref={containerRef}>\n        <div vkuiClass=\"Tooltip__corner\" style={{ [alignX]: 20 + cornerOffset }} />\n        <div vkuiClass=\"Tooltip__content\">\n          {header && <Subhead weight=\"semibold\" vkuiClass=\"Tooltip__title\">{header}</Subhead>}\n          {text && <Subhead weight=\"regular\" vkuiClass=\"Tooltip__text\">{text}</Subhead>}\n        </div>\n      </div>\n    </div>, portalTarget);\n};\n\nexport interface TooltipProps {\n  /**\n   * **Важно**: если в `children` передан React-компонент, то необходимо убедиться в том, что он поддерживает\n   * свойство `getRootRef`, которое должно возвращаться ссылку на корневой DOM-элемент компонента,\n   * иначе тултип показан не будет. Если передан React-element, то такой проблемы нет.\n   */\n  children: ReactElement;\n  mode?: 'accent' | 'light';\n  /**\n   * Если передан `false`, то рисуется просто `children`.\n   */\n  isShown?: boolean;\n  /**\n   * Текст тултипа.\n   */\n  text?: ReactNode;\n  /**\n   * Заголовок тултипа.\n   */\n  header?: ReactNode;\n  /**\n   * Положение по горизонтали (прижатие к левому или правому краю `children`).\n   */\n  alignX?: 'left' | 'right';\n  /**\n   * Положение по вертикали (расположение над или под `children`).\n   */\n  alignY?: 'top' | 'bottom';\n  /**\n   * Сдвиг по горизонтали (относительно портала, в котором рисуется тултип).\n   */\n  offsetX?: number;\n  /**\n   * Сдвиг по вертикали (относительно портала, в котором рисуется тултип).\n   */\n  offsetY?: number;\n  /**\n   * Сдвиг треугольника (относительно ширины тултипа).\n   */\n  cornerOffset?: number;\n  /**\n   * Callback, который вызывается при клике по любому месту в пределах экрана.\n   */\n  onClose?: () => void;\n}\n\nconst Tooltip: FC<TooltipProps> = ({ children = null, isShown, ...portalProps }) => {\n  const [target, setTarget] = useState<HTMLElement>();\n\n  if (IS_DEV) {\n    const multiChildren = Children.count(children) > 1;\n    // Empty children is a noop\n    const primitiveChild = hasReactNode(children) && typeof children !== 'object';\n    (multiChildren || primitiveChild) && warn([\n      'children must be a single React element, got',\n      multiChildren && 'multiple',\n      primitiveChild && JSON.stringify(children),\n    ].filter(Boolean).join(' '));\n  }\n\n  const childRef = isValidElement(children) &&\n    (isDOMTypeElement(children) ? children.ref : (children.props as any).getRootRef);\n  const patchedRef = useExternRef(setTarget, childRef);\n  const child = isValidElement(children) ? cloneElement(children, {\n    [isDOMTypeElement(children) ? 'ref' : 'getRootRef']: patchedRef,\n  }) : children;\n\n  return (\n    <Fragment>\n      {child}\n      {isShown && target != null && <TooltipPortal {...portalProps} target={target} />}\n    </Fragment>\n  );\n};\n\nTooltip.defaultProps = {\n  offsetX: 0,\n  offsetY: 15,\n  alignX: 'left',\n  alignY: 'bottom',\n  cornerOffset: 0,\n  isShown: true,\n  mode: 'accent',\n};\n\nexport default Tooltip;\n"],"file":"Tooltip.js"}