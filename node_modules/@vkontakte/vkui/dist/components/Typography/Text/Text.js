import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createScopedElement } from "../../../lib/jsxRuntime";
import { usePlatform } from "../../../hooks/usePlatform";
import { classNames } from "../../../lib/classNames";
import { getClassName } from "../../../helpers/getClassName";
import { ANDROID } from "../../../lib/platform";
import { warnOnce } from "../../../lib/warnOnce";
var warn = warnOnce('Text');

var Text = function Text(_ref) {
  var children = _ref.children,
      weight = _ref.weight,
      Component = _ref.Component,
      getRootRef = _ref.getRootRef,
      restProps = _objectWithoutProperties(_ref, ["children", "weight", "Component", "getRootRef"]);

  var platform = usePlatform();
  var textWeight = weight;

  if (platform === ANDROID) {
    if (weight === 'semibold') {
      textWeight = 'medium';
    }
  }

  if (process.env.NODE_ENV === 'development' && typeof Component !== 'string' && getRootRef) {
    warn('getRootRef can only be used with DOM components');
  }

  return createScopedElement(Component, _extends({}, restProps, {
    ref: getRootRef,
    vkuiClass: classNames(getClassName('Text', platform), "Text--w-".concat(textWeight))
  }), children);
};

Text.defaultProps = {
  Component: 'div'
};
export default Text;
//# sourceMappingURL=Text.js.map