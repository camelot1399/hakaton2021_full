{"version":3,"sources":["../../../src/components/HorizontalCell/HorizontalCell.tsx"],"names":["classNames","getClassName","usePlatform","hasReactNode","Caption","Tappable","Subhead","Avatar","CellTypography","size","children","restProps","HorizontalCell","className","header","style","subtitle","getRootRef","getRef","Component","platform","disabled","href"],"mappings":";;;AACA,SAASA,UAAT;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;;AAOA,IAAMC,cAAuC,GAAG,SAA1CA,cAA0C,OAA2D;AAAA,MAAxDC,IAAwD,QAAxDA,IAAwD;AAAA,MAAlDC,QAAkD,QAAlDA,QAAkD;AAAA,MAArCC,SAAqC;;AACzG,SAAOF,IAAI,KAAK,GAAT,GACH,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAmB,IAAA,MAAM,EAAC;AAA1B,KAAwCE,SAAxC,GAAoDD,QAApD,CADG,GAEH,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAC;AAAhB,KAA8BC,SAA9B,GAA0CD,QAA1C,CAFJ;AAGD,CAJD;;AAiBA,OAAO,IAAME,cAAuC,GAAG,SAA1CA,cAA0C,QAW5B;AAAA,MAVzBC,SAUyB,SAVzBA,SAUyB;AAAA,MATzBC,MASyB,SATzBA,MASyB;AAAA,MARzBC,KAQyB,SARzBA,KAQyB;AAAA,MAPzBC,QAOyB,SAPzBA,QAOyB;AAAA,yBANzBP,IAMyB;AAAA,MANzBA,IAMyB,2BANlB,GAMkB;AAAA,6BALzBC,QAKyB;AAAA,MALzBA,QAKyB,+BALd,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE;AAAd,IAKc;AAAA,MAJzBO,UAIyB,SAJzBA,UAIyB;AAAA,MAHzBC,MAGyB,SAHzBA,MAGyB;AAAA,8BAFzBC,SAEyB;AAAA,MAFzBA,SAEyB,gCAFb,KAEa;AAAA,MADtBR,SACsB;;AACzB,MAAMS,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,SACE;AACE,IAAA,SAAS,EAAEF,UAAU,CAACC,YAAY,CAAC,gBAAD,EAAmBmB,QAAnB,CAAb,4BAA8DX,IAA9D,EADvB;AAEE,IAAA,GAAG,EAAEQ,UAFP;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,SAAS,EAAEF;AAJb,KAME,oBAAC,QAAD;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,QAAQ,EAAEF,SAAS,CAACU,QAFtB;AAGE,IAAA,UAAU,EAAEH,MAHd;AAIE,IAAA,SAAS,EAAEP,SAAS,CAACW,IAAV,GAAiB,GAAjB,GAAuBH;AAJpC,KAKMR,SALN,GAOGR,YAAY,CAACO,QAAD,CAAZ,IAA0B;AAAK,IAAA,SAAS,EAAC;AAAf,KAAwCA,QAAxC,CAP7B,EAQE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGP,YAAY,CAACW,MAAD,CAAZ,IACC,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEL,IAAtB;AAA4B,IAAA,SAAS,EAAC;AAAtC,KAA+DK,MAA/D,CAFJ,EAIGX,YAAY,CAACa,QAAD,CAAZ,IAA0B,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAC,GAAhC;AAAoC,IAAA,SAAS,EAAC;AAA9C,KAA0EA,QAA1E,CAJ7B,CARF,CANF,CADF;AAwBD,CAtCM","sourcesContent":["import { AnchorHTMLAttributes, ElementType, FC, HTMLAttributes, ReactNode } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\nimport Caption from '../Typography/Caption/Caption';\nimport Tappable from '../Tappable/Tappable';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Avatar from '../Avatar/Avatar';\nimport { HasRef, HasRootRef } from '../../types';\n\ninterface CellTypographyProps extends HTMLAttributes<HTMLDivElement> {\n  size: HorizontalCellProps['size'];\n}\n\nconst CellTypography: FC<CellTypographyProps> = ({ size, children, ...restProps }: CellTypographyProps) => {\n  return size === 's'\n    ? <Caption level=\"2\" weight=\"regular\" {...restProps}>{children}</Caption>\n    : <Subhead weight=\"regular\" {...restProps}>{children}</Subhead>;\n};\n\nexport interface HorizontalCellProps extends\n  AnchorHTMLAttributes<HTMLElement>,\n  HasRootRef<HTMLDivElement>,\n  HasRef<HTMLDivElement> {\n  Component?: ElementType;\n  size?: 's' | 'm' | 'l';\n  header?: ReactNode;\n  subtitle?: ReactNode;\n  disabled?: boolean;\n}\n\nexport const HorizontalCell: FC<HorizontalCellProps> = ({\n  className,\n  header,\n  style,\n  subtitle,\n  size = 's',\n  children = <Avatar size={56} />,\n  getRootRef,\n  getRef,\n  Component = 'div',\n  ...restProps\n}: HorizontalCellProps) => {\n  const platform = usePlatform();\n\n  return (\n    <div\n      vkuiClass={classNames(getClassName('HorizontalCell', platform), `HorizontalCell--${size}`)}\n      ref={getRootRef}\n      style={style}\n      className={className}\n    >\n      <Tappable\n        vkuiClass=\"HorizontalCell__body\"\n        disabled={restProps.disabled}\n        getRootRef={getRef}\n        Component={restProps.href ? 'a' : Component}\n        {...restProps}\n      >\n        {hasReactNode(children) && <div vkuiClass=\"HorizontalCell__image\">{children}</div>}\n        <div vkuiClass=\"HorizontalCell__content\">\n          {hasReactNode(header) && (\n            <CellTypography size={size} vkuiClass=\"HorizontalCell__title\">{header}</CellTypography>\n          )}\n          {hasReactNode(subtitle) && <Caption weight=\"regular\" level=\"1\" vkuiClass=\"HorizontalCell__subtitle\">{subtitle}</Caption>}\n        </div>\n      </Tappable>\n    </div>\n  );\n};\n"],"file":"HorizontalCell.js"}